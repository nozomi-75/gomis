-- Drop all tables
-- DROP TABLE IF EXISTS SESSION_PARTICIPANTS, SESSIONS, VIOLATION_RECORD, INCIDENTS, REMARK, CONTACT, ADDRESS, PARENTS, GUARDIAN, STUDENT, PARTICIPANTS, APPOINTMENTS, USERS, GUIDANCE_COUNSELORS_MHA;

-- Create PARTICIPANTS table
CREATE TABLE PARTICIPANTS (
    PARTICIPANT_ID INT PRIMARY KEY,
    STUDENT_UID INT,
    PARTICIPANT_TYPE VARCHAR(50),
    PARTICIPANT_LASTNAME VARCHAR(100),
    PARTICIPANT_FIRSTNAME VARCHAR(100),
    EMAIL VARCHAR(100),
    CONTACT_NUMBER VARCHAR(20)
);

-- Create STUDENT table
CREATE TABLE STUDENT (
    STUDENT_UID INT PRIMARY KEY,
    PARENT_ID INT,
    GUARDIAN_ID INT,
    ADDRESS_ID INT,
    CONTACT_ID INT,
    STUDENT_LRN VARCHAR(50),
    STUDENT_LASTNAME VARCHAR(100),
    STUDENT_FIRSTNAME VARCHAR(100),
    STUDENT_MIDDLENAME VARCHAR(100),
    STUDENT_SEX VARCHAR(10),
    STUDENT_BIRTHDATE DATE,
    STUDENT_MOTHERTONGUE VARCHAR(50),
    STUDENT_AGE INT,
    STUDENT_IP_TYPE VARCHAR(50),
    STUDENT_RELIGION VARCHAR(50)
);

-- Create GUARDIAN table
CREATE TABLE GUARDIAN (
    GUARDIAN_ID INT PRIMARY KEY,
    GUARDIAN_LASTNAME VARCHAR(100),
    GUARDIAN_FIRSTNAME VARCHAR(100),
    GUARDIAN_MIDDLENAME VARCHAR(100),
    GUARDIAN_RELATIONSHIP VARCHAR(50)
);

-- Create PARENTS table
CREATE TABLE PARENTS (
    PARENT_ID INT PRIMARY KEY,
    FATHER_FIRSTNAME VARCHAR(100),
    FATHER_LASTNAME VARCHAR(100),
    FATHER_MIDDLENAME VARCHAR(100),
    MOTHER_FIRSTNAME VARCHAR(100),
    MOTHER_LASTNAME VARCHAR(100),
    MOTHER_MIDDLE_NAME VARCHAR(100)
);

-- Create ADDRESS table
CREATE TABLE ADDRESS (
    ADDRESS_ID INT PRIMARY KEY,
    ADDRESS_HOUSE_NUMBER VARCHAR(50),
    ADDRESS_STREET_SUBDVISION VARCHAR(100),
    ADDRESS_REGION VARCHAR(100),
    ADDRESS_PROVINCE VARCHAR(100),
    ADDRESS_MUNICIPALITY VARCHAR(100),
    ADDRESS_BARANGAY VARCHAR(100),
    ADDRESS_ZIP_CODE VARCHAR(20)
);

-- Create CONTACT table
CREATE TABLE CONTACT (
    CONTACT_ID INT PRIMARY KEY,
    CONTACT_NUMBER VARCHAR(20)
);

-- Create REMARK table
CREATE TABLE REMARK (
    REMARK_ID INT PRIMARY KEY,
    STUDENT_ID INT,
    REMARK_TEXT VARCHAR(255),
    REMARK_DATE DATE
);

-- Create INCIDENTS table
CREATE TABLE INCIDENTS (
    INCIDENT_ID INT PRIMARY KEY,
    PARTICIPANT_ID INT,
    INCIDENT_DATE DATETIME,
    INCIDENT_DESCRIPTION TEXT,
    ACTION_TAKEN TEXT,
    RECOMMENDATION TEXT,
    STATUS VARCHAR(50),
    UPDATED_AT DATETIME
);

-- Create VIOLATION RECORD table
CREATE TABLE VIOLATION_RECORD (
    VIOLATION_ID INT PRIMARY KEY,
    PARTICIPANT_ID INT,
    VIOLATION_TYPE VARCHAR(100),
    VIOLATION_DESCRIPTION TEXT,
    ANECDOTAL_RECORD TEXT,
    REINFORCEMENT VARCHAR(100),
    STATUS VARCHAR(50),
    UPDATED_AT DATETIME
);

-- Create SESSIONS table
CREATE TABLE SESSIONS (
    SESSION_ID INT PRIMARY KEY,
    APPOINTMENT_ID INT,
    GUIDANCE_COUNSELOR_ID INT,
    PARTICIPANT_ID INT,
    VIOLATION_ID INT,
    SESSION_TYPE VARCHAR(50),
    SESSION_DATE_TIME DATETIME,
    SESSION_NOTES TEXT,
    SESSION_STATUS VARCHAR(50),
    UPDATED_AT DATETIME
);

-- Create SESSION_PARTICIPANTS table
CREATE TABLE SESSION_PARTICIPANTS (
    SESSION_PARTICIPANTS_ID INT PRIMARY KEY,
    PARTICIPANT_ID INT,
    SESSION_ID INT,
    FOREIGN KEY (PARTICIPANT_ID) REFERENCES PARTICIPANTS(PARTICIPANT_ID),
    FOREIGN KEY (SESSION_ID) REFERENCES SESSIONS(SESSION_ID)
);

-- Create APPOINTMENTS table
CREATE TABLE APPOINTMENTS (
    APPOINTMENT_ID INT PRIMARY KEY,
    PARTICIPANT_ID INT,
    GUIDANCE_COUNSELOR_ID INT,
    APPOINTMENT_TITLE VARCHAR(100),
    APPOINTMENT_TYPE VARCHAR(50),
    APPOINTMENT_DATE_TIME DATETIME,
    APPOINTMENT_STATUS VARCHAR(50),
    UPDATED_AT DATETIME
);

-- Create GUIDANCE COUNSELORS table
CREATE TABLE GUIDANCE_COUNSELORS (
    GUIDANCE_COUNSELOR_ID INT PRIMARY KEY,
    LAST_NAME VARCHAR(100),
    FIRST_NAME VARCHAR(100),
    MIDDLE_INITIAL VARCHAR(10),
    SUFFIX VARCHAR(10),
    GENDER VARCHAR(10),
    SPECIALIZATION VARCHAR(100),
    CONTACT_NUM INT,
    EMAIL VARCHAR(100),
    POSITION VARCHAR(100),
    PROFILE_PICTURE BLOB
);

-- Create USERS table
CREATE TABLE USERS (
    USER_ID INT PRIMARY KEY,
    U_NAME  VARCHAR(100),
    U_PASS VARCHAR(100),
    GUIDANCE_COUNSELOR_ID INT,
    FOREIGN KEY (GUIDANCE_COUNSELOR_ID) REFERENCES GUIDANCE_COUNSELORS(GUIDANCE_COUNSELOR_ID)
);
